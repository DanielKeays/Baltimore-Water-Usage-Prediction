{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Machine Learning - 'Water Usage Prediction Project'** "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## This machine learning project realtes to using past historical yearly water usage data per houseohold in Baltimore MD, USA, to make prediction(s) on the households' future year water usage:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Here I am importing the required files/packages to use throughout the project. Additionally, I am loading my original data into Python and creating my testing and training data to be used, with regards to machine learning, from the original dataset.* "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import scipy\n",
    "import numpy \n",
    "import matplotlib\n",
    "import pandas\n",
    "import statsmodels\n",
    "import sklearn\n",
    "\n",
    "from pandas import read_csv\n",
    "series = read_csv('/Users/danielkeays/Desktop/Data Science Projects/Water Usage Prediction Project/water.csv', header=0, index_col=0)\n",
    "split_point = len(series) - 10\n",
    "trainingset = series[0:split_point]\n",
    "testingset = series[split_point:]\n",
    "trainingset.to_csv('trainingset.csv')\n",
    "testingset.to_csv('testingset.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Next I am writing code to give valuation of the model being used. The evalutaion method I am using is the root mean squared error value.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 21.658\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "from math import sqrt\n",
    "X = series.values\n",
    "X = X.astype('float32')\n",
    "train_size = int(len(X) * .50)\n",
    "train = X[0:train_size]\n",
    "test = X[train_size:]\n",
    "history = [x for x in train]\n",
    "predictions = list()\n",
    "for i in range(len(test)):\n",
    "    yhat = history[-1]\n",
    "    predictions.append(yhat)\n",
    "    obs = test[i]\n",
    "    history.append(obs)\n",
    "mse = mean_squared_error(test, predictions)\n",
    "rmse = sqrt(mse)\n",
    "print('RMSE: %.3f' % rmse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            Water\n",
      "count   69.000000\n",
      "mean   500.478261\n",
      "std     73.901685\n",
      "min    344.000000\n",
      "25%    458.000000\n",
      "50%    492.000000\n",
      "75%    538.000000\n",
      "max    662.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pandas import read_csv\n",
    "series = read_csv('trainingset.csv', header =0, index_col =0)\n",
    "print(series.describe())\n",
    "from matplotlib import pyplot\n",
    "series.plot()\n",
    "pyplot.show()\n",
    "series.hist()\n",
    "series.plot(kind='kde')\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this code below, I am giving an effort to produce a Box and Whiskers plot to show the mean of water usage on a ten year grouping. My goal was to produce a graph showing the differences in mean and max/min values for each of the ten year frequency periods of the whole dataset.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#from pandas import Grouper\n",
    "#from pandas import DataFrame\n",
    "#from pandas import to_datetime\n",
    "#boxwhisker = read_csv('/Users/danielkeays/Desktop/Data Science Projects/Water Usage #Predection Project/water.csv', header=0)\n",
    "#boxwhisker = boxwhisker.loc['0':'59']\n",
    "#boxwhisker['Year'] = boxwhisker['Year'].astype('datetime64[ns]')\n",
    "#groups = boxwhisker.groupby"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Below is where I am using the differencing function on the testing set of data. I am doing this in an effort to get a more 'level' looking graph with respect to the fluctuations in the data, and to have a constant mean value for the whole dataset.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ADF Statistic: -6.126719\n",
      "p-value: 0.000000\n",
      "Critical Values:\n",
      "\t1%: -3.534\n",
      "\t5%: -2.906\n",
      "\t10%: -2.591\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from statsmodels.tsa.stattools import adfuller\n",
    "from pandas import Series\n",
    "\n",
    "def difference(trainingset):\n",
    "\tdiff = list()\n",
    "\tfor i in range(1, len(trainingset)):\n",
    "\t\tvalue = trainingset[i] - trainingset[i - 1]\n",
    "\t\tdiff.append(value)\n",
    "\treturn Series(diff)\n",
    " \n",
    "series1 = read_csv('trainingset.csv', header = 0, index_col =0)\n",
    "X = series1.values\n",
    "X = X.astype('float32')\n",
    "stationary = difference(X)\n",
    "stationary.index = series1.index[1:]\n",
    "stationary = stationary.astype('float32')\n",
    "result = adfuller(stationary)\n",
    "print('ADF Statistic: %f' % result[0])\n",
    "print('p-value: %f' % result[1])\n",
    "print('Critical Values:')\n",
    "for key, value in result[4].items():\n",
    "\tprint('\\t%s: %.3f' % (key, value))\n",
    "stationary.plot()\n",
    "pyplot.show()\n",
    "stationary.to_csv('stationary.csv', index=False, header=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Below are two data visualizations of the autocorrelation of the data. The first graph shows autocorrelation while the second is showing the partial autocorrelation of the series.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from statsmodels.graphics.tsaplots import plot_acf\n",
    "from statsmodels.graphics.tsaplots import plot_pacf\n",
    "series = read_csv('trainingset.csv', header = 0, index_col = 0)\n",
    "pyplot.figure()\n",
    "plot_acf(series, ax=pyplot.gca())\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_pacf(series, ax=pyplot.gca())\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Below shows the process used to implement the ARIMA model to the data and make predictions. There is also a root mean suared error value shown here. The context of the rmse is that a lower value reflects a stronger or more accurate model prediction. In this certain case, the 25.26 value represents that the model has an error of approximately 22.26L for the water usage value.* "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">Predicted=530.101, Expected=503.000\n",
      ">Predicted=511.154, Expected=503.000\n",
      ">Predicted=515.637, Expected=515.000\n",
      ">Predicted=520.904, Expected=522.000\n",
      ">Predicted=525.009, Expected=492.000\n",
      ">Predicted=492.360, Expected=503.000\n",
      ">Predicted=504.664, Expected=503.000\n",
      ">Predicted=512.082, Expected=450.000\n",
      ">Predicted=454.312, Expected=432.000\n",
      ">Predicted=441.329, Expected=432.000\n",
      ">Predicted=452.418, Expected=458.000\n",
      ">Predicted=470.223, Expected=462.000\n",
      ">Predicted=465.860, Expected=503.000\n",
      ">Predicted=498.112, Expected=488.000\n",
      ">Predicted=483.399, Expected=466.000\n",
      ">Predicted=455.128, Expected=492.000\n",
      ">Predicted=492.320, Expected=503.000\n",
      ">Predicted=503.711, Expected=515.000\n",
      ">Predicted=505.815, Expected=500.000\n",
      ">Predicted=493.165, Expected=522.000\n",
      ">Predicted=515.482, Expected=575.000\n",
      ">Predicted=571.332, Expected=583.000\n",
      ">Predicted=568.102, Expected=587.000\n",
      ">Predicted=567.410, Expected=628.000\n",
      ">Predicted=620.638, Expected=640.000\n",
      ">Predicted=632.546, Expected=609.000\n",
      ">Predicted=594.338, Expected=606.000\n",
      ">Predicted=602.108, Expected=632.000\n",
      ">Predicted=637.227, Expected=617.000\n",
      ">Predicted=614.318, Expected=613.000\n",
      ">Predicted=608.755, Expected=598.000\n",
      ">Predicted=600.294, Expected=575.000\n",
      ">Predicted=574.946, Expected=564.000\n",
      ">Predicted=567.577, Expected=549.000\n",
      ">Predicted=553.543, Expected=538.000\n",
      "RMSE: 25.262\n"
     ]
    }
   ],
   "source": [
    "from statsmodels.tsa.arima.model import ARIMA\n",
    "series = read_csv('trainingset.csv', header=0, index_col=0, parse_dates=True, squeeze=True)\n",
    "X = series.values\n",
    "X = X.astype('float32')\n",
    "train_size = int(len(X) * 0.50)\n",
    "train, test = X[0:train_size], X[train_size:]\n",
    "history = [x for x in train]\n",
    "predictions = list()\n",
    "for i in range(len(test)):\n",
    "\tmodel = ARIMA(history, order=(4,1,1))\n",
    "\tmodel_fit = model.fit()\n",
    "\tyhat = model_fit.forecast()[0]\n",
    "\tpredictions.append(yhat)\n",
    "\tobs = test[i]\n",
    "\thistory.append(obs)\n",
    "\tprint('>Predicted=%.3f, Expected=%.3f' % (yhat, obs))\n",
    "rmse = sqrt(mean_squared_error(test, predictions))\n",
    "print('RMSE: %.3f' % rmse)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*From the code below, it shows the Grid Search of the hyperparameters to use in the ARIMA Model. There is a repetitive process going on where the computer is checking or 'searching' for the combination of hyperparamters to use in the ARIMA which gives a result with the lowest root mean squared error value. Finally, after all possible combinations were ran in the model, the combination of (2,1,0) was what the lowest rmse ended up being.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ARIMA(0, 0, 0) RMSE=76.755\n",
      "ARIMA(0, 0, 1) RMSE=47.347\n",
      "ARIMA(0, 0, 2) RMSE=36.030\n",
      "ARIMA(0, 0, 3) RMSE=32.537\n",
      "ARIMA(0, 0, 4) RMSE=29.590\n",
      "ARIMA(0, 1, 0) RMSE=21.975\n",
      "ARIMA(0, 1, 1) RMSE=21.907\n",
      "ARIMA(0, 1, 2) RMSE=22.178\n",
      "ARIMA(0, 1, 3) RMSE=24.731\n",
      "ARIMA(0, 1, 4) RMSE=24.844\n",
      "ARIMA(0, 2, 0) RMSE=28.992\n",
      "ARIMA(0, 2, 1) RMSE=22.314\n",
      "ARIMA(0, 2, 2) RMSE=22.196\n",
      "ARIMA(0, 2, 3) RMSE=22.356\n",
      "ARIMA(0, 2, 4) RMSE=28.512\n",
      "ARIMA(1, 0, 0) RMSE=23.957\n",
      "ARIMA(1, 0, 1) RMSE=23.991\n",
      "ARIMA(1, 0, 2) RMSE=25.384\n",
      "ARIMA(1, 0, 3) RMSE=25.059\n",
      "ARIMA(1, 0, 4) RMSE=25.109\n",
      "ARIMA(1, 1, 0) RMSE=21.921\n",
      "ARIMA(1, 1, 1) RMSE=21.879\n",
      "ARIMA(1, 1, 2) RMSE=23.314\n",
      "ARIMA(1, 1, 3) RMSE=24.816\n",
      "ARIMA(1, 1, 4) RMSE=27.238\n",
      "ARIMA(1, 2, 0) RMSE=27.464\n",
      "ARIMA(1, 2, 1) RMSE=22.219\n",
      "ARIMA(1, 2, 2) RMSE=22.782\n",
      "ARIMA(1, 2, 3) RMSE=22.927\n",
      "ARIMA(1, 2, 4) RMSE=28.476\n",
      "ARIMA(2, 0, 0) RMSE=24.101\n",
      "ARIMA(2, 0, 1) RMSE=24.113\n",
      "ARIMA(2, 0, 2) RMSE=25.451\n",
      "ARIMA(2, 0, 3) RMSE=25.118\n",
      "ARIMA(2, 0, 4) RMSE=25.278\n",
      "ARIMA(2, 1, 0) RMSE=21.732\n",
      "ARIMA(2, 1, 1) RMSE=23.823\n",
      "ARIMA(2, 1, 2) RMSE=27.510\n",
      "ARIMA(2, 1, 3) RMSE=26.363\n",
      "ARIMA(2, 1, 4) RMSE=26.503\n",
      "ARIMA(2, 2, 0) RMSE=25.282\n",
      "ARIMA(2, 2, 1) RMSE=22.064\n",
      "ARIMA(2, 2, 2) RMSE=23.249\n",
      "ARIMA(2, 2, 3) RMSE=22.675\n",
      "ARIMA(2, 2, 4) RMSE=25.452\n",
      "ARIMA(3, 0, 0) RMSE=24.167\n",
      "ARIMA(3, 0, 1) RMSE=24.661\n",
      "ARIMA(3, 0, 2) RMSE=24.270\n",
      "ARIMA(3, 0, 3) RMSE=26.439\n",
      "ARIMA(3, 0, 4) RMSE=26.564\n",
      "ARIMA(3, 1, 0) RMSE=24.269\n",
      "ARIMA(3, 1, 1) RMSE=25.486\n",
      "ARIMA(3, 1, 2) RMSE=25.394\n",
      "ARIMA(3, 1, 3) RMSE=24.034\n",
      "ARIMA(3, 1, 4) RMSE=26.626\n",
      "ARIMA(3, 2, 0) RMSE=25.627\n",
      "ARIMA(3, 2, 1) RMSE=24.827\n",
      "ARIMA(3, 2, 2) RMSE=30.082\n",
      "ARIMA(3, 2, 3) RMSE=24.763\n",
      "ARIMA(3, 2, 4) RMSE=25.018\n",
      "ARIMA(4, 0, 0) RMSE=25.113\n",
      "ARIMA(4, 0, 1) RMSE=25.228\n",
      "ARIMA(4, 0, 2) RMSE=25.716\n",
      "ARIMA(4, 0, 3) RMSE=26.376\n",
      "ARIMA(4, 0, 4) RMSE=27.271\n",
      "ARIMA(4, 1, 0) RMSE=24.799\n",
      "ARIMA(4, 1, 1) RMSE=25.262\n",
      "ARIMA(4, 1, 2) RMSE=25.257\n",
      "ARIMA(4, 1, 3) RMSE=25.377\n",
      "ARIMA(4, 1, 4) RMSE=26.695\n",
      "ARIMA(4, 2, 0) RMSE=27.093\n",
      "ARIMA(4, 2, 1) RMSE=25.676\n",
      "ARIMA(4, 2, 2) RMSE=25.357\n",
      "ARIMA(4, 2, 3) RMSE=29.379\n",
      "ARIMA(4, 2, 4) RMSE=32.592\n",
      "Best ARIMA(2, 1, 0) RMSE=21.732\n"
     ]
    }
   ],
   "source": [
    "import warnings\n",
    "def evaluate_arima_model(X, arima_order):\n",
    "    X = X.astype('float32')\n",
    "    train_size = int(len(X) * 0.50)\n",
    "    train, test = X[0:train_size], X[train_size:]\n",
    "    history = [x for x in train]\n",
    "    predictions = list()\n",
    "    for t in range(len(test)):\n",
    "        model = ARIMA(history, order=arima_order)\n",
    "        model_fit = model.fit()\n",
    "        yhat = model_fit.forecast()[0]\n",
    "        predictions.append(yhat)\n",
    "        history.append(test[t])\n",
    "    rmse = sqrt(mean_squared_error(test, predictions))\n",
    "    return rmse\n",
    "\n",
    "def evaluate_models(dataset, p_values, d_values, q_values):\n",
    "\tdataset = dataset.astype('float32')\n",
    "\tbest_score, best_cfg = float(\"inf\"), None\n",
    "\tfor p in p_values:\n",
    "\t\tfor d in d_values:\n",
    "\t\t\tfor q in q_values:\n",
    "\t\t\t\torder = (p,d,q)\n",
    "\t\t\t\ttry:\n",
    "\t\t\t\t\trmse = evaluate_arima_model(dataset, order)\n",
    "\t\t\t\t\tif rmse < best_score:\n",
    "\t\t\t\t\t\tbest_score, best_cfg = rmse, order\n",
    "\t\t\t\t\tprint('ARIMA%s RMSE=%.3f' % (order,rmse))\n",
    "\t\t\t\texcept:\n",
    "\t\t\t\t\tcontinue\n",
    "\tprint('Best ARIMA%s RMSE=%.3f' % (best_cfg, best_score))\n",
    "\n",
    "series = read_csv('trainingset.csv', header=0, index_col=0, parse_dates=True, squeeze=True)\n",
    "p_values = range(0, 5)\n",
    "d_values = range(0, 3)\n",
    "q_values = range(0, 5)\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "evaluate_models(series.values, p_values, d_values, q_values)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Below is looking at the residuals from the model and checking to see if there is any bias, or a 'skew' to the data visualization.* "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               0\n",
      "count  35.000000\n",
      "mean    0.619434\n",
      "std    25.622687\n",
      "min   -62.082376\n",
      "25%   -16.471456\n",
      "50%    -1.663750\n",
      "75%    11.664835\n",
      "max    60.589765\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pandas import DataFrame\n",
    "residuals = [test[i]-predictions[i] for i in range(len(test))]\n",
    "residuals = DataFrame(residuals)\n",
    "print(residuals.describe())\n",
    "pyplot.figure()\n",
    "pyplot.subplot(211)\n",
    "residuals.hist(ax=pyplot.gca())\n",
    "pyplot.subplot(212)\n",
    "residuals.plot(kind='kde', ax=pyplot.gca())\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Fixing or adjusting the bias in the above scenario is what the code below shows. Getting the residual to be more evenly distributed, or in other words to tend towards a mean of zero, is the goal of this code below.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 21.705\n",
      "               0\n",
      "count  35.000000\n",
      "mean   -0.000166\n",
      "std    22.022201\n",
      "min   -53.186473\n",
      "25%   -17.291261\n",
      "50%    -1.536482\n",
      "75%    11.007438\n",
      "max    50.199503\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "history = [x for x in train]\n",
    "predictions = list()\n",
    "bias = 1.081624\n",
    "for i in range(len(test)):\n",
    "\tmodel = ARIMA(history, order=(2,1,0))\n",
    "\tmodel_fit = model.fit()\n",
    "\tyhat = bias + float(model_fit.forecast()[0])\n",
    "\tpredictions.append(yhat)\n",
    "\tobs = test[i]\n",
    "\thistory.append(obs)\n",
    "rmse = sqrt(mean_squared_error(test, predictions))\n",
    "print('RMSE: %.3f' % rmse)\n",
    "residuals = [test[i]-predictions[i] for i in range(len(test))]\n",
    "residuals = DataFrame(residuals)\n",
    "print(residuals.describe())\n",
    "pyplot.figure()\n",
    "pyplot.subplot(211)\n",
    "residuals.hist(ax=pyplot.gca())\n",
    "pyplot.subplot(212)\n",
    "residuals.plot(kind='kde', ax=pyplot.gca())\n",
    "pyplot.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Below shows code that does the following: It loads the model, makes a prediction for the next time period, and then finally prints that prediction. In this specific case the prediction the model makes is 540L of water usage for the next year.*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted: 540.011\n"
     ]
    }
   ],
   "source": [
    "series = read_csv('trainingset.csv', header=0, index_col=0, parse_dates=True, squeeze=True)\n",
    "X = series.values\n",
    "X = X.astype('float32')\n",
    "model = ARIMA(X, order=(2,1,0))\n",
    "model_fit = model.fit()\n",
    "bias = 1.081624\n",
    "model_fit.save('model.pkl')\n",
    "numpy.save('model_bias.npy', [bias])\n",
    "from statsmodels.tsa.arima.model import ARIMAResults\n",
    "import numpy\n",
    "model_fit = ARIMAResults.load('model.pkl')\n",
    "bias = numpy.load('model_bias.npy')\n",
    "yhat = bias + float(model_fit.forecast()[0])\n",
    "print('Predicted: %.3f' % yhat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">Predicted=540.011, Expected=568.000\n",
      ">Predicted=571.593, Expected=575.000\n",
      ">Predicted=573.292, Expected=579.000\n",
      ">Predicted=579.562, Expected=587.000\n",
      ">Predicted=588.064, Expected=602.000\n",
      ">Predicted=603.025, Expected=594.000\n",
      ">Predicted=593.177, Expected=587.000\n",
      ">Predicted=588.556, Expected=587.000\n",
      ">Predicted=588.796, Expected=625.000\n",
      ">Predicted=627.947, Expected=613.000\n",
      "RMSE: 16.533\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset = read_csv('trainingset.csv', header=0, index_col=0, parse_dates=True, squeeze=True)\n",
    "X = dataset.values.astype('float32')\n",
    "history = [x for x in X]\n",
    "validation = read_csv('testingset.csv', header=0, index_col=0, parse_dates=True, squeeze=True)\n",
    "y = validation.values.astype('float32')\n",
    "model_fit = ARIMAResults.load('model.pkl')\n",
    "bias = numpy.load('model_bias.npy')\n",
    "predictions = list()\n",
    "yhat = bias + float(model_fit.forecast()[0])\n",
    "predictions.append(yhat)\n",
    "history.append(y[0])\n",
    "print('>Predicted=%.3f, Expected=%.3f' % (yhat, y[0]))\n",
    "for i in range(1, len(y)):\n",
    "\tmodel = ARIMA(history, order=(2,1,0))\n",
    "\tmodel_fit = model.fit()\n",
    "\tyhat = bias + float(model_fit.forecast()[0])\n",
    "\tpredictions.append(yhat)\n",
    "\tobs = y[i]\n",
    "\thistory.append(obs)\n",
    "\tprint('>Predicted=%.3f, Expected=%.3f' % (yhat, obs))\n",
    "rmse = sqrt(mean_squared_error(y, predictions))\n",
    "print('RMSE: %.3f' % rmse)\n",
    "pyplot.plot(y)\n",
    "pyplot.plot(predictions, color='red')\n",
    "pyplot.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
